#===========================================================================================================#

#    Developer:
#        Dibansa, Rahmani
#    Designer:
#        Garcia, Bhee Jay 
#    
#    Brief description of the program:
#        This program is a monitoring system for a smart vending machine, developed for an undergraduate thesis.

#===========================================================================================================#

#========== IMPORTING/INCLUDING KIVY FILES ==========#
# THE KIVY FILES CAN BE FOUND IN THE FOLDER /kv
# THESE INCLUDES ARE A NECESSARY PART OF THE WHOLE
# PROGRAM. INSIDE THESE FILES ARE THE KIVY 
# REPRESENTATION OF THE PROGRAM'S VISUAL INTERACTION
# WITH THE USER.

#:import utils kivy.utils
#:import ScrollEffect kivy.effects.scroll.ScrollEffect

#:include kv/startup_screen.kv
#:include kv/login_screen.kv		
#:include kv/signup_screen.kv
#:include kv/machine_screen.kv
#:include kv/add_machine_screen.kv
#:include kv/main_screen.kv
#:include kv/rice_status_screen.kv
#:include kv/misc_status_screen.kv
#:include kv/sales_screen.kv
#:include kv/sales_stats_screen.kv
#:include kv/refill_screen.kv
#:include kv/refill_history_screen.kv
#:include kv/refill_stats_screen.kv
#:include kv/notification_screen.kv


#====================================================#


#========== THE PROGRAM'S SCREEN MANAGER ==========#
# The screen manager functionality is reponsible for the proper referencing
# of each screen/window of the monitoring system app. These screens are part 
# of the screen manager and represent different functionalities of the application.
#
# THE SCREENS ARE AS FOLLOWS:
#	- StartUpScreen: The very first screen that will welcome the user when the app runs.
#	- LogInScreen: The screen that facilitates the user's log in.
#	- SignUpScreen: The screen that facilitates the user's account creation.
#	- MainScreen: The screen where the user can choose what to do in a machine's monitoring.
#	- MachineScreen: The screen that displays the list of machines.
#	- AddMachineScreen: The screen where the user can add a new machine.
#	- RiceStatusScreen: The screen that shows the status of rice-related transactions.
#	- MiscStatusScreen: The screen that shows the status of miscellaneous item transactions.
#	- SalesScreen: The screen where the user can view and manage sales transactions.
#	- SalesStatsScreen: The screen that displays statistics and charts related to sales.
#	- RefillScreen: The screen where the user can refill items in a machine.
#	- RefillHistoryScreen: The screen that shows the history of refill transactions.
#	- RefillStatsScreen: The screen that displays statistics and charts related to refill transactions.
#	- NotificationScreen: The screen that shows notifications to the user.
ScreenManager:
	id: screen_manager
	StartUpScreen:
		name: "startup_screen"
		id: startup_screen
	LogInScreen:
		name: "login_screen"
		id: login_screen
	SignUpScreen:
		name: "signup_screen"
		id: signup_screen
	MachineScreen:
		name: "machine_screen"
		id: machine_screen
	AddMachineScreen:
		name: "add_machine_screen"
		id: add_machine_screen
	MainScreen:
		name: "main_screen"
		id: main_screen
	RiceStatusScreen:
		name: "rice_status_screen"
		id: rice_status_screen
	MiscStatusScreen:
		name: "misc_status_screen"
		id: misc_status_screen
	SalesScreen:
		name: "sales_screen"
		id: sales_screen
	SalesStatsScreen:
		name: "sales_stats_screen"
		id: sales_stats_screen
	RefillScreen:
		name: "refill_screen"
		id: refill_screen
	RefillHistoryScreen:
		name: "refill_history_screen"
		id: refill_history_screen
	RefillStatsScreen:
		name: "refill_stats_screen"
		id: refill_stats_screen
	NotificationScreen:
		name: "notification_screen"
		id: notification_screen

#========== SCALE LABEL ==========#
# This is a custom widget that inherits the features of a label and a scale.
# It dynamically adjusts the text size based on the screen size and the 
# length of the text displayed.
<ScaleLabel@Label>:
    _scale: 1. if self.texture_size[0] < self.width else float(self.width) / self.texture_size[0]
    canvas.before:
        PushMatrix
        Scale:
            origin: self.center
            x: self._scale or 1.
            y: self._scale or 1.
    canvas.after:
        PopMatrix

#========== SALES SPINNER OPTION ==========#
# This is a custom spinner option widget used for sales-related functionality. 
# It sets the font size, font name, and background color.
<SalesOption@SpinnerOption>:
    font_size: app.font_scaling * 15
    font_name: "resources/fonts/nunito/Nunito-Light.ttf"
    background_color: color_button if self.state == 'down' else color_button_pressed
    size_hint: 0.2, None
    size_y: app.font_scaling * 15

#========== REFILL SPINNER OPTION ==========#
# This is a custom spinner option widget used for refill-related functionality. 
# It sets the font size, font name, and background color.
<RefillOption@SpinnerOption>:
    font_size: app.font_scaling * 15
    font_name: "resources/fonts/nunito/Nunito-Light.ttf"
    background_color: color_button if self.state == 'down' else color_button_pressed
    size_hint: 0.2, None
    size_y: app.font_scaling * 15

<RefillOption2@SpinnerOption>:
    font_size: app.font_scaling * 15
    font_name: "resources/fonts/nunito/Nunito-Light.ttf"
    background_color: color_button if self.state == 'down' else color_button_pressed
    size_hint: 0.4, None
    size_y: app.font_scaling * 20
    max_size_y: app.font_scaling * 20
